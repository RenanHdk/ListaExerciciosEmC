/*
Exercício Triângulo
Autor: Renan Hideki Sugiura

Saída: Se o triângulo existe e que tipo de triângulo ele é
Entrada: Três lados de um triângulo(inteiros positivos)
processamento: 3 Modulos
entrada: while até receber numero inteiro
checagem se é possível: utilizar fórmulas com condicionais e returns
tipo de triangulo: utilizar condicionais para verificar quantos lados são iguais
*/

#include <stdio.h>

int input();
int checkTriangulo(int a, int b, int c);
int tipoTriangulo(int a, int b, int c, int check);

int main(){
	int a=input(), b=input(), c=input();
	int check = checkTriangulo(a, b, c);
	tipoTriangulo(a, b, c, check);
	
	return 0;
}

int input(){
	int n;
	while(1){
		printf("Insira um lado do triangulo: ");
		scanf("%d", &n);
		if(n>0)
			break;
		else
			printf("Valor invalido\n");
	}
	
	return n;
}

int checkTriangulo(int a, int b, int c){
	if(a+b>c && b+c>a && c+a>b){
		printf("O triangulo existe\n");
		return 0;
	}
	else{
		printf("O triangulo nao existe\n");
		return 1;
	}
}


int tipoTriangulo(int a, int b, int c, int check){
	if(check==1)
		return 1;
	if(a==b && b==c)
		printf("\nO triangulo e equilatero");
	else if(a!=b && b!=c && c!=a)
		printf("\nO triangulo e escaleno");
	else
		printf("O triangulo e isoceles");
	return 0;
}



#include <stdio.h>

/*

Exercício - MMC
Autor: Renan Hideki Sugiura
Saída: mmc entre os dois valores entrados pelo usuário
Entrada: dois valores inteiros 
processamento: Caso eles tenham um multiplicante em comum, retornar o maior valor, caso contrário retornar sua multiplicação
*/

int mmc(int a, int b){
	if(a%b==0)
		return a;
	else if(b%a==0)
		return b;
	else
		return a*b;
}

int main(){
	int a, b;
	printf("Insira o primeiro valor: "); scanf("%d", &a);
	printf("Insira o segundo o valor: "); scanf("%d", &b);
	int resposta = mmc(a, b);
	printf("O MMC dos valores %d e %d e igual a %d", a, b, resposta);
	
	return 0; 
}




/*
Exercício Primos
Autor: Renan Hideki Sugiura 

Saída: Soma dos primeiros N numeros primos
Entrada: Quantidade de primos a serem somados 
Porcessamento: Criação de 2 modulos
somaPrimo: soma os numeros que forem primos
primo: verifica se um numero e primo
Resto sera feito no corpo principal
*/

#include <stdio.h>
#include <locale.h>

void somaPrimo(int qntd);
int primo(int n);;

int main(){
	setlocale(LC_ALL, "Portuguese");
	int qntd;
	printf("Insira a quantidade de primos a serem somados: ");
	while(1){
		scanf("%d", &qntd);
		if(qntd<0)
			printf("\nValor invalido\n");
		else
			break;
	}
	
	somaPrimo(qntd);
}

void somaPrimo(int qntd){
	int i, soma=0;
	for(i=1; i<qntd+1; i++){
		if(primo(i)!=0)
			printf("%d é primo\n", i);
		soma+=primo(i);
	}
	printf("\nA soma dos primos e igual a %d\n", soma);
}

int primo(int n){
	int i, count=0;
	for(i=1; i<n+1; i++){
		if(n % i==0){
			count++;
		}
	}
	if(count==2 || n==1){
		return n;
	}
	else{
		return 0;
	}
}


#include <stdio.h>
#include <locale.h>

/*
Exercicio Fibonacci
Autor: Renan Hideki Sugiura

Saída: os termos da sequencia até a posição que foi inserida pelo usuário
Entrada: posição da sequencia 
Processamento: utilização de uma variavel como temporário, assim alterando três variáveis simultaneamente, se assemelhando a um 
triângulo se movimentando

*/

int Fibonacci(int n){
	int i, a=0, b=1, c=a+b;
	for(i = 2; i<n; i++){
		a = b;
		b = c;
		c = a + b;
	}
	if(n==0) return a;
	return c;
}

int main(){
	setlocale(LC_ALL, "Portuguese");
	int i, n; printf("Insira a posição desejada(inicio em 0): "); scanf("%d", &n);
	for(i=0; i<=n; i++)
		printf(" %d ", Fibonacci(i));
	return 0;
}



#include <stdio.h>

/*
Exercício somatorio
Autor: Renan Hideki Sugiura

Saída: Resultado do somatorio ate o numero n
Entrada: Valor do n
Processamento: Incrmenteação de um contador com o valor do somatorio para cada termo até o valor n,
int cluindo o próprio n
*/

int somatorio(int n){
	int count = 0, i;
	for(i = 1; i<=n; i++)
		count += (5 * (i*i) + (2*i) + 8);
	return count;
}

int main(){
	int n; printf("Insira até qual valor o somatório deve prosseguir: "); scanf("%d", &n);
	while(n<=0){
		printf("Valor invalido, insira novamente: "); scanf("%d", &n);
	}
	printf("Somatorio: %d", somatorio(n));
	
	return 0;
}

#include <stdio.h>

/*
Exercicio - Rotação de valores
Autor: Renan Hideki Sugiura

Saida: valores rotacionados
Entrada: valores a serem rotacionados
Processamento: Utilizando ponteiros como parâmetros, apontá-los diretamente para 
o endereço de memória da variável e alterar então, o seu conteúdo
*/

void rotacao(int *a, int *b, int *c){
	int tmp = *a;
	*a = *b;
	*b = *c; 
	*c = tmp;
}

int main(){
	int a = 5, b = 8, c = 9;
	printf("a: %d\nb: %d\nc: %d", a, b, c);
	rotacao(&a, &b, &c);
	printf("\n\na: %d\nb: %d\nc: %d", a, b, c);
}



#include <stdio.h>


/*
Exercicio - triangulos
Autor: Renan Hideki Sugiura

Saida: quatro tipos de triangulos
Entrada: tamanho dos triangulos
Processamento: Uma função para cada tipo de triangulo
Utilizam de aninhamento de loops, para processar linha, pula linha e atualiza condicional, 
sendo que, para cada função, cumprir a condicional pode formar ou o espaço oui o triângulo

*/


void trianguloA(int tamanho){
	printf("Triangulo A: \n");
	int i, j, count = tamanho-1;
	for(i=0; i<tamanho; i++){
		for(j = 0; j < tamanho; j++){
			if(j<count)
				printf(" ");
			else
				printf("*");
		}
		count--;
		printf("\n");
	}
	printf("\n");
}

void trianguloB(int tamanho){
	printf("Triangulo B: \n");
	int i, j, count = tamanho;
	for(i=0; i<tamanho; i++){
		for(j = 0; j < tamanho; j++){
			if(j<count)
				printf("*");
			else
				printf(" ");
		}
		count--;
		printf("\n");
	}
	printf("\n");
}

void trianguloC(int tamanho){
	printf("Triangulo C: \n");
	int i, j, count = 1;
	for(i=0; i<tamanho; i++){
		for(j = 0; j < tamanho; j++){
			if(j<count)
				printf("*");
			else
				printf(" ");
		}
		count++;
		printf("\n");
	}
	printf("\n");
}

void trianguloD(int tamanho){
	printf("Triangulo D: \n");
	int i, j, count = 0;
	for(i=0; i<tamanho; i++){
		for(j = 0; j < tamanho; j++){
			if(j<count)
				printf(" ");
			else
				printf("*");
		}
		count++;
		printf("\n");
	}
	printf("\n");
}

int main(){
	
	int tamanho; printf("Insira o tamanho dos triangulos: "); scanf("%d", &tamanho);
	while(tamanho<=1){
		printf("Valor invalido, insira novamente: "); scanf("%d", &tamanho);
	}
	
	trianguloA(tamanho);
	trianguloB(tamanho);
	trianguloC(tamanho);
	trianguloD(tamanho);
	
	return 0;
}
